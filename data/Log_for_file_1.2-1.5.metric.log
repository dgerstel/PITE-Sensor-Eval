############# FILENAME #############
danefake1.2-1.5.dat
####################################
--Parameter scanned:  metric
----Parameter value:  metric  =  minkowski
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 1.         0.       ]
 [ 0.         1.       ]
 [ 1.         0.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 1.         0.       ]
 [ 0.         1.       ]
 [ 1.         0.       ]
 [ 0.         1.       ]
 [ 1.         0.       ]
 [ 0.         1.       ]
 [ 0.3952249  0.6047751]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  0.97
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.28233144  0.71766856]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.56283532  0.43716468]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86653111  0.13346889]
 [ 0.91319238  0.08680762]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.98
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.22124881  0.77875119]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.19277111  0.80722889]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.65537124  0.34462876]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.88035659  0.11964341]
 [ 0.9200058   0.0799942 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.87996795  0.12003205]
 [ 0.8999358   0.1000642 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.88463357  0.11536643]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.8480348   0.1519652 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.88683952  0.11316048]
 [ 1.          0.        ]
 [ 0.84294687  0.15705313]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.93893167  0.06106833]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.92265074  0.07734926]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.82662733  0.17337267]]
------Accuracy obtained using cross-validation:  0.98
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.18469572  0.81530428]
 [ 0.17997065  0.82002935]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.16262451  0.83737549]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.54768047  0.45231953]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.84665344  0.15334656]
 [ 0.81240669  0.18759331]
 [ 0.86895334  0.13104666]
 [ 0.85680498  0.14319502]
 [ 0.90049885  0.09950115]
 [ 1.          0.        ]
 [ 0.89094558  0.10905442]
 [ 0.90762936  0.09237064]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.89526345  0.10473655]
 [ 0.98303302  0.01696698]
 [ 1.          0.        ]
 [ 0.86675741  0.13324259]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96347458  0.03652542]
 [ 0.89592463  0.10407537]
 [ 1.          0.        ]
 [ 0.86144547  0.13855453]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.89703242  0.10296758]
 [ 1.          0.        ]
 [ 0.91751912  0.08248088]
 [ 0.91696292  0.08303708]
 [ 1.          0.        ]
 [ 0.92702245  0.07297755]
 [ 0.86982104  0.13017896]
 [ 0.9217674   0.0782326 ]
 [ 0.92116702  0.07883298]
 [ 0.91369346  0.08630654]
 [ 0.85218029  0.14781971]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.15889207  0.84110793]
 [ 0.29822115  0.70177885]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.14248931  0.85751069]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.10882321  0.89117679]
 [ 0.47316561  0.52683439]]
Probability of correct assessment (fake data): 
[[ 0.9753006   0.0246994 ]
 [ 1.          0.        ]
 [ 0.86640721  0.13359279]
 [ 0.75831135  0.24168865]
 [ 0.87557091  0.12442909]
 [ 0.87458415  0.12541585]
 [ 0.90843799  0.09156201]
 [ 0.97761245  0.02238755]
 [ 0.89972866  0.10027134]
 [ 0.91398854  0.08601146]
 [ 1.          0.        ]
 [ 0.97591688  0.02408312]
 [ 0.90372629  0.09627371]
 [ 0.98330076  0.01669924]
 [ 0.93333838  0.06666162]
 [ 0.8804223   0.1195777 ]
 [ 0.9649079   0.0350921 ]
 [ 1.          0.        ]
 [ 0.93021479  0.06978521]
 [ 0.8304065   0.1695935 ]
 [ 0.97502406  0.02497594]
 [ 0.87521207  0.12478793]
 [ 1.          0.        ]
 [ 0.97734439  0.02265561]
 [ 0.86154102  0.13845898]
 [ 0.95676545  0.04323455]
 [ 0.84933357  0.15066643]
 [ 0.84774137  0.15225863]
 [ 1.          0.        ]
 [ 0.87912366  0.12087634]
 [ 0.77276697  0.22723303]
 [ 0.92705406  0.07294594]
 [ 0.85565768  0.14434232]
 [ 0.92022642  0.07977358]
 [ 0.87081521  0.12918479]]
------Accuracy obtained using cross-validation:  0.92
####################################

----Parameter value:  metric  =  euclidean
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 1.         0.       ]
 [ 0.         1.       ]
 [ 1.         0.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 0.         1.       ]
 [ 1.         0.       ]
 [ 0.         1.       ]
 [ 1.         0.       ]
 [ 0.         1.       ]
 [ 1.         0.       ]
 [ 0.         1.       ]
 [ 0.3952249  0.6047751]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  0.97
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.28233144  0.71766856]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.56283532  0.43716468]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86653111  0.13346889]
 [ 0.91319238  0.08680762]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.98
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.22124881  0.77875119]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.19277111  0.80722889]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.65537124  0.34462876]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.88035659  0.11964341]
 [ 0.9200058   0.0799942 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.87996795  0.12003205]
 [ 0.8999358   0.1000642 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.88463357  0.11536643]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.8480348   0.1519652 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.88683952  0.11316048]
 [ 1.          0.        ]
 [ 0.84294687  0.15705313]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.93893167  0.06106833]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.92265074  0.07734926]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.82662733  0.17337267]]
------Accuracy obtained using cross-validation:  0.98
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.18469572  0.81530428]
 [ 0.17997065  0.82002935]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.16262451  0.83737549]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.54768047  0.45231953]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.84665344  0.15334656]
 [ 0.81240669  0.18759331]
 [ 0.86895334  0.13104666]
 [ 0.85680498  0.14319502]
 [ 0.90049885  0.09950115]
 [ 1.          0.        ]
 [ 0.89094558  0.10905442]
 [ 0.90762936  0.09237064]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.89526345  0.10473655]
 [ 0.98303302  0.01696698]
 [ 1.          0.        ]
 [ 0.86675741  0.13324259]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96347458  0.03652542]
 [ 0.89592463  0.10407537]
 [ 1.          0.        ]
 [ 0.86144547  0.13855453]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.89703242  0.10296758]
 [ 1.          0.        ]
 [ 0.91751912  0.08248088]
 [ 0.91696292  0.08303708]
 [ 1.          0.        ]
 [ 0.92702245  0.07297755]
 [ 0.86982104  0.13017896]
 [ 0.9217674   0.0782326 ]
 [ 0.92116702  0.07883298]
 [ 0.91369346  0.08630654]
 [ 0.85218029  0.14781971]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.15889207  0.84110793]
 [ 0.29822115  0.70177885]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.14248931  0.85751069]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.10882321  0.89117679]
 [ 0.47316561  0.52683439]]
Probability of correct assessment (fake data): 
[[ 0.9753006   0.0246994 ]
 [ 1.          0.        ]
 [ 0.86640721  0.13359279]
 [ 0.75831135  0.24168865]
 [ 0.87557091  0.12442909]
 [ 0.87458415  0.12541585]
 [ 0.90843799  0.09156201]
 [ 0.97761245  0.02238755]
 [ 0.89972866  0.10027134]
 [ 0.91398854  0.08601146]
 [ 1.          0.        ]
 [ 0.97591688  0.02408312]
 [ 0.90372629  0.09627371]
 [ 0.98330076  0.01669924]
 [ 0.93333838  0.06666162]
 [ 0.8804223   0.1195777 ]
 [ 0.9649079   0.0350921 ]
 [ 1.          0.        ]
 [ 0.93021479  0.06978521]
 [ 0.8304065   0.1695935 ]
 [ 0.97502406  0.02497594]
 [ 0.87521207  0.12478793]
 [ 1.          0.        ]
 [ 0.97734439  0.02265561]
 [ 0.86154102  0.13845898]
 [ 0.95676545  0.04323455]
 [ 0.84933357  0.15066643]
 [ 0.84774137  0.15225863]
 [ 1.          0.        ]
 [ 0.87912366  0.12087634]
 [ 0.77276697  0.22723303]
 [ 0.92705406  0.07294594]
 [ 0.85565768  0.14434232]
 [ 0.92022642  0.07977358]
 [ 0.87081521  0.12918479]]
------Accuracy obtained using cross-validation:  0.92
####################################

####################################


--Parameter >> metric << summary-table of accuracy (cross-validation): [[ 0.97  0.98  0.98  0.95  0.92]
 [ 0.97  0.98  0.98  0.95  0.92]]
####################################


