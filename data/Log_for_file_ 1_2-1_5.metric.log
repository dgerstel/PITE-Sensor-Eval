############# FILENAME #############
danefake 1_2-1_5.dat
####################################
--Parameter scanned:  metric
----Parameter value:  metric  =  minkowski
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.51711939  0.48288061]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.52211668  0.47788332]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  0.92
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.66170293  0.33829707]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.66349944  0.33650056]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.81898306  0.18101694]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96020288  0.03979712]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.80657994  0.19342006]
 [ 1.          0.        ]
 [ 0.81196804  0.18803196]
 [ 1.          0.        ]
 [ 0.80719234  0.19280766]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.21247675  0.78752325]
 [ 0.73491909  0.26508091]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.72031163  0.27968837]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.84416335  0.15583665]
 [ 0.9242963   0.0757037 ]
 [ 0.95048846  0.04951154]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.87515518  0.12484482]
 [ 0.96156236  0.03843764]
 [ 0.85759243  0.14240757]
 [ 0.9475804   0.0524196 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.84209545  0.15790455]
 [ 0.95997292  0.04002708]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.83718874  0.16281126]
 [ 1.          0.        ]
 [ 0.83720072  0.16279928]
 [ 1.          0.        ]
 [ 0.83334873  0.16665127]
 [ 1.          0.        ]
 [ 0.95039065  0.04960935]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.94531309  0.05468691]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.16582091  0.83417909]
 [ 0.          1.        ]
 [ 0.34848268  0.65151732]
 [ 0.77993781  0.22006219]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.14716112  0.85283888]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.75931837  0.24068163]]
Probability of correct assessment (fake data): 
[[ 0.93042552  0.06957448]
 [ 0.9712324   0.0287676 ]
 [ 0.86306378  0.13693622]
 [ 0.92932165  0.07067835]
 [ 0.90681067  0.09318933]
 [ 0.86653212  0.13346788]
 [ 0.90902348  0.09097652]
 [ 1.          0.        ]
 [ 0.78081526  0.21918474]
 [ 0.96276727  0.03723273]
 [ 0.75263287  0.24736713]
 [ 0.95018687  0.04981313]
 [ 0.88257346  0.11742654]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86245581  0.13754419]
 [ 0.9614808   0.0385192 ]
 [ 0.87989095  0.12010905]
 [ 1.          0.        ]
 [ 0.91452279  0.08547721]
 [ 0.85811627  0.14188373]
 [ 0.96159936  0.03840064]
 [ 0.85632699  0.14367301]
 [ 1.          0.        ]
 [ 0.85312082  0.14687918]
 [ 1.          0.        ]
 [ 0.90660774  0.09339226]
 [ 0.91243359  0.08756641]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.91871046  0.08128954]
 [ 0.87271198  0.12728802]
 [ 0.979185    0.020815  ]
 [ 0.87675732  0.12324268]
 [ 0.94811911  0.05188089]]
------Accuracy obtained using cross-validation:  0.91
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.14381158  0.85618842]
 [ 0.          1.        ]
 [ 0.44281328  0.55718672]
 [ 0.66807914  0.33192086]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.12864636  0.87135364]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.66763663  0.33236337]]
Probability of correct assessment (fake data): 
[[ 0.93445109  0.06554891]
 [ 0.97187202  0.02812798]
 [ 0.87735364  0.12264636]
 [ 0.93357184  0.06642816]
 [ 0.9107326   0.0892674 ]
 [ 0.78171661  0.21828339]
 [ 0.9155849   0.0844151 ]
 [ 1.          0.        ]
 [ 0.80184787  0.19815213]
 [ 0.96382114  0.03617886]
 [ 0.7739626   0.2260374 ]
 [ 0.95233978  0.04766022]
 [ 0.79735023  0.20264977]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.87814532  0.12185468]
 [ 0.96284015  0.03715985]
 [ 0.79321263  0.20678737]
 [ 1.          0.        ]
 [ 0.92027789  0.07972211]
 [ 0.87424546  0.12575454]
 [ 0.93536583  0.06463417]
 [ 0.87118176  0.12881824]
 [ 1.          0.        ]
 [ 0.76345989  0.23654011]
 [ 1.          0.        ]
 [ 0.91058592  0.08941408]
 [ 0.91871612  0.08128388]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86877989  0.13122011]
 [ 0.88612276  0.11387724]
 [ 0.97956678  0.02043322]
 [ 0.78854502  0.21145498]
 [ 0.95057021  0.04942979]]
------Accuracy obtained using cross-validation:  0.9
####################################

----Parameter value:  metric  =  euclidean
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.51711939  0.48288061]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.52211668  0.47788332]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  0.92
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.66170293  0.33829707]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.66349944  0.33650056]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.81898306  0.18101694]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96020288  0.03979712]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.80657994  0.19342006]
 [ 1.          0.        ]
 [ 0.81196804  0.18803196]
 [ 1.          0.        ]
 [ 0.80719234  0.19280766]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.21247675  0.78752325]
 [ 0.73491909  0.26508091]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.72031163  0.27968837]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.84416335  0.15583665]
 [ 0.9242963   0.0757037 ]
 [ 0.95048846  0.04951154]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.87515518  0.12484482]
 [ 0.96156236  0.03843764]
 [ 0.85759243  0.14240757]
 [ 0.9475804   0.0524196 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.84209545  0.15790455]
 [ 0.95997292  0.04002708]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.83718874  0.16281126]
 [ 1.          0.        ]
 [ 0.83720072  0.16279928]
 [ 1.          0.        ]
 [ 0.83334873  0.16665127]
 [ 1.          0.        ]
 [ 0.95039065  0.04960935]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.94531309  0.05468691]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.16582091  0.83417909]
 [ 0.          1.        ]
 [ 0.34848268  0.65151732]
 [ 0.77993781  0.22006219]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.14716112  0.85283888]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.75931837  0.24068163]]
Probability of correct assessment (fake data): 
[[ 0.93042552  0.06957448]
 [ 0.9712324   0.0287676 ]
 [ 0.86306378  0.13693622]
 [ 0.92932165  0.07067835]
 [ 0.90681067  0.09318933]
 [ 0.86653212  0.13346788]
 [ 0.90902348  0.09097652]
 [ 1.          0.        ]
 [ 0.78081526  0.21918474]
 [ 0.96276727  0.03723273]
 [ 0.75263287  0.24736713]
 [ 0.95018687  0.04981313]
 [ 0.88257346  0.11742654]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86245581  0.13754419]
 [ 0.9614808   0.0385192 ]
 [ 0.87989095  0.12010905]
 [ 1.          0.        ]
 [ 0.91452279  0.08547721]
 [ 0.85811627  0.14188373]
 [ 0.96159936  0.03840064]
 [ 0.85632699  0.14367301]
 [ 1.          0.        ]
 [ 0.85312082  0.14687918]
 [ 1.          0.        ]
 [ 0.90660774  0.09339226]
 [ 0.91243359  0.08756641]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.91871046  0.08128954]
 [ 0.87271198  0.12728802]
 [ 0.979185    0.020815  ]
 [ 0.87675732  0.12324268]
 [ 0.94811911  0.05188089]]
------Accuracy obtained using cross-validation:  0.91
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.14381158  0.85618842]
 [ 0.          1.        ]
 [ 0.44281328  0.55718672]
 [ 0.66807914  0.33192086]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.12864636  0.87135364]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.66763663  0.33236337]]
Probability of correct assessment (fake data): 
[[ 0.93445109  0.06554891]
 [ 0.97187202  0.02812798]
 [ 0.87735364  0.12264636]
 [ 0.93357184  0.06642816]
 [ 0.9107326   0.0892674 ]
 [ 0.78171661  0.21828339]
 [ 0.9155849   0.0844151 ]
 [ 1.          0.        ]
 [ 0.80184787  0.19815213]
 [ 0.96382114  0.03617886]
 [ 0.7739626   0.2260374 ]
 [ 0.95233978  0.04766022]
 [ 0.79735023  0.20264977]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.87814532  0.12185468]
 [ 0.96284015  0.03715985]
 [ 0.79321263  0.20678737]
 [ 1.          0.        ]
 [ 0.92027789  0.07972211]
 [ 0.87424546  0.12575454]
 [ 0.93536583  0.06463417]
 [ 0.87118176  0.12881824]
 [ 1.          0.        ]
 [ 0.76345989  0.23654011]
 [ 1.          0.        ]
 [ 0.91058592  0.08941408]
 [ 0.91871612  0.08128388]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86877989  0.13122011]
 [ 0.88612276  0.11387724]
 [ 0.97956678  0.02043322]
 [ 0.78854502  0.21145498]
 [ 0.95057021  0.04942979]]
------Accuracy obtained using cross-validation:  0.9
####################################

####################################


--Parameter >> metric << summary-table of accuracy (cross-validation): [[ 0.92  0.95  0.96  0.91  0.9 ]
 [ 0.92  0.95  0.96  0.91  0.9 ]]
####################################


