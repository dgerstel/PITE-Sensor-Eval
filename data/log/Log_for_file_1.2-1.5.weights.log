############# FILENAME #############
danefake1.2-1.5.dat
####################################
--Parameter scanned:  weights
----Parameter value:  weights  =  distance
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.51925564  0.48074436]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.46580599  0.53419401]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  0.99
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.29091999  0.70908001]
 [ 0.66124808  0.33875192]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.62352784  0.37647216]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.85853314  0.14146686]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.22857102  0.77142898]
 [ 0.52574399  0.47425601]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.70517787  0.29482213]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.85088447  0.14911553]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.82701094  0.17298906]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98164503  0.01835497]
 [ 0.7994345   0.2005655 ]
 [ 1.          0.        ]
 [ 0.86883577  0.13116423]
 [ 0.86180375  0.13819625]
 [ 0.88133319  0.11866681]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.93449363  0.06550637]
 [ 0.86539104  0.13460896]
 [ 1.          0.        ]
 [ 0.87570812  0.12429188]
 [ 1.          0.        ]
 [ 0.96350916  0.03649084]
 [ 0.8793959   0.1206041 ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.16658268  0.83341732]
 [ 0.          1.        ]
 [ 0.19110506  0.80889494]
 [ 0.43660302  0.56339698]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.15165327  0.84834673]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.13199866  0.86800134]
 [ 0.75201699  0.24798301]]
Probability of correct assessment (fake data): 
[[ 0.9202975   0.0797025 ]
 [ 1.          0.        ]
 [ 0.93772304  0.06227696]
 [ 0.86852901  0.13147099]
 [ 0.95049665  0.04950335]
 [ 0.85679768  0.14320232]
 [ 0.89448826  0.10551174]
 [ 0.84885663  0.15114337]
 [ 0.94131723  0.05868277]
 [ 0.85860982  0.14139018]
 [ 1.          0.        ]
 [ 0.85455535  0.14544465]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98197534  0.01802466]
 [ 0.83201147  0.16798853]
 [ 0.85377761  0.14622239]
 [ 0.88384681  0.11615319]
 [ 0.87737141  0.12262859]
 [ 0.89368877  0.10631123]
 [ 0.96552456  0.03447544]
 [ 1.          0.        ]
 [ 0.85228353  0.14771647]
 [ 0.93878715  0.06121285]
 [ 0.93490769  0.06509231]
 [ 0.84441347  0.15558653]
 [ 0.88809996  0.11190004]
 [ 0.8805436   0.1194564 ]
 [ 0.96385471  0.03614529]
 [ 0.88867497  0.11132503]
 [ 0.8533392   0.1466608 ]
 [ 0.93569097  0.06430903]
 [ 0.89078931  0.10921069]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.92
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.14448976  0.85551024]
 [ 0.          1.        ]
 [ 0.16458674  0.83541326]
 [ 0.37365086  0.62634914]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.25969348  0.74030652]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.89229653  0.10770347]
 [ 0.          1.        ]
 [ 0.91587206  0.08412794]
 [ 0.          1.        ]
 [ 0.88030534  0.11969466]
 [ 0.11693198  0.88306802]
 [ 0.65880373  0.34119627]]
Probability of correct assessment (fake data): 
[[ 0.87141479  0.12858521]
 [ 0.93383107  0.06616893]
 [ 0.94113462  0.05886538]
 [ 0.88174669  0.11825331]
 [ 0.95243381  0.04756619]
 [ 0.87454284  0.12545716]
 [ 0.90335002  0.09664998]
 [ 0.86519239  0.13480761]
 [ 0.94378309  0.05621691]
 [ 0.87540359  0.12459641]
 [ 1.          0.        ]
 [ 0.87249623  0.12750377]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96756881  0.03243119]
 [ 0.74436475  0.25563525]
 [ 0.8713277   0.1286723 ]
 [ 0.89499622  0.10500378]
 [ 0.88907663  0.11092337]
 [ 0.90369315  0.09630685]
 [ 0.96663552  0.03336448]
 [ 1.          0.        ]
 [ 0.87024922  0.12975078]
 [ 0.94210339  0.05789661]
 [ 0.93856466  0.06143534]
 [ 0.74109754  0.25890246]
 [ 0.84711423  0.15288577]
 [ 0.89190614  0.10809386]
 [ 0.96488224  0.03511776]
 [ 0.89916862  0.10083138]
 [ 0.76717398  0.23282602]
 [ 0.93745442  0.06254558]
 [ 0.89974535  0.10025465]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.93
####################################

----Parameter value:  weights  =  uniform
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: uniform  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.5  0.5]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 0.5  0.5]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  0.98
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: uniform  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.33333333  0.66666667]
 [ 0.66666667  0.33333333]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.66666667  0.33333333]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.94
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: uniform  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.25  0.75]
 [ 0.5   0.5 ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 1.    0.  ]
 [ 0.    1.  ]
 [ 1.    0.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 0.    1.  ]
 [ 1.    0.  ]
 [ 0.    1.  ]
 [ 1.    0.  ]
 [ 0.    1.  ]
 [ 1.    0.  ]
 [ 0.    1.  ]
 [ 0.75  0.25]]
Probability of correct assessment (fake data): 
[[ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 0.75  0.25]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 0.75  0.25]
 [ 0.75  0.25]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 0.75  0.25]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 0.75  0.25]
 [ 1.    0.  ]]
------Accuracy obtained using cross-validation:  0.94
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: uniform  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.   1. ]
 [ 0.   1. ]
 [ 0.2  0.8]
 [ 0.   1. ]
 [ 0.2  0.8]
 [ 0.4  0.6]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.2  0.8]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.2  0.8]
 [ 0.8  0.2]]
Probability of correct assessment (fake data): 
[[ 0.8  0.2]
 [ 1.   0. ]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 1.   0. ]
 [ 0.8  0.2]
 [ 1.   0. ]
 [ 1.   0. ]
 [ 1.   0. ]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 1.   0. ]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.6  0.4]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.8  0.2]
 [ 0.6  0.4]
 [ 0.8  0.2]
 [ 1.   0. ]]
------Accuracy obtained using cross-validation:  0.86
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: uniform  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.16666667  0.83333333]
 [ 0.          1.        ]
 [ 0.16666667  0.83333333]
 [ 0.33333333  0.66666667]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.33333333  0.66666667]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.83333333  0.16666667]
 [ 0.          1.        ]
 [ 0.83333333  0.16666667]
 [ 0.          1.        ]
 [ 0.83333333  0.16666667]
 [ 0.16666667  0.83333333]
 [ 0.66666667  0.33333333]]
Probability of correct assessment (fake data): 
[[ 0.66666667  0.33333333]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 1.          0.        ]
 [ 0.83333333  0.16666667]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 1.          0.        ]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.66666667  0.33333333]
 [ 0.5         0.5       ]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 0.83333333  0.16666667]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.85
####################################

####################################


--Parameter >> weights << summary-table of accuracy (cross-validation): [[ 0.99  0.95  0.96  0.92  0.93]
 [ 0.98  0.94  0.94  0.86  0.85]]
####################################


