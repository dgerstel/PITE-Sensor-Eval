############# FILENAME #############
danefake 1_7-2.dat
####################################
--Parameter scanned:  train_test_ratio
----Parameter value:  train_test_ratio  =  0.3
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.97963963  0.02036037]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96046337  0.03953663]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96995231  0.03004769]
 [ 0.91903204  0.08096796]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96311175  0.03688825]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96518682  0.03481318]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.94500347  0.05499653]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98601479  0.01398521]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.91380073  0.08619927]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.12876015  0.87123985]]
Probability of correct assessment (fake data): 
[[ 0.9065411   0.0934589 ]
 [ 0.9536668   0.0463332 ]
 [ 0.89222352  0.10777648]
 [ 1.          0.        ]
 [ 0.97383543  0.02616457]
 [ 0.89567125  0.10432875]
 [ 0.98003956  0.01996044]
 [ 0.97864103  0.02135897]
 [ 0.92182935  0.07817065]
 [ 0.9683449   0.0316551 ]
 [ 1.          0.        ]
 [ 0.96195383  0.03804617]
 [ 0.9678056   0.0321944 ]
 [ 0.89942255  0.10057745]
 [ 0.97082421  0.02917579]
 [ 0.92472338  0.07527662]
 [ 0.9574928   0.0425072 ]
 [ 1.          0.        ]
 [ 0.96442271  0.03557729]
 [ 0.97987929  0.02012071]
 [ 0.90868037  0.09131963]
 [ 1.          0.        ]
 [ 0.96631491  0.03368509]
 [ 1.          0.        ]
 [ 0.97327161  0.02672839]
 [ 0.94759755  0.05240245]
 [ 0.90925083  0.09074917]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.95936992  0.04063008]
 [ 0.96569259  0.03430741]
 [ 0.98620028  0.01379972]
 [ 0.97926851  0.02073149]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.98
####################################

----Parameter value:  train_test_ratio  =  0.4
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.4  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.4  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.4  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 0.8472744   0.1527256 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.90672699  0.09327301]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96151881  0.03848119]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.97823507  0.02176493]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.4  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 0.86686249  0.13313751]
 [ 0.97963963  0.02036037]
 [ 1.          0.        ]
 [ 0.91444536  0.08555464]
 [ 1.          0.        ]
 [ 0.93685061  0.06314939]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96281119  0.03718881]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.97867241  0.02132759]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98601479  0.01398521]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.4  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 0.8816106   0.1183894 ]
 [ 0.98004267  0.01995733]
 [ 1.          0.        ]
 [ 0.92091407  0.07908593]
 [ 0.9683449   0.0316551 ]
 [ 0.94044413  0.05955587]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96399112  0.03600888]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.97908203  0.02091797]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.90925083  0.09074917]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.986201    0.013799  ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  1.0
####################################

----Parameter value:  train_test_ratio  =  0.5
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.5  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.5  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.5  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.5  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  1.0
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.5  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 0.94162859  0.05837141]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96201825  0.03798175]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.97723116  0.02276884]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.96912317  0.03087683]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  1.0
####################################

----Parameter value:  train_test_ratio  =  0.6
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.6  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.44338315  0.55661685]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.44559696  0.55440304]
 [ 1.          0.        ]
 [ 0.47692453  0.52307547]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.6  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.60938763  0.39061237]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.61490942  0.38509058]
 [ 1.          0.        ]
 [ 0.64576744  0.35423256]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.99
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.6  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.69677612  0.30322388]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.70443284  0.29556716]
 [ 0.94377851  0.05622149]
 [ 0.72924328  0.27075672]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98162392  0.01837608]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.99
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.6  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.73332504  0.26667496]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.74009847  0.25990153]
 [ 0.94610403  0.05389597]
 [ 0.7635336   0.2364664 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98194283  0.01805717]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.99
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.6  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.75874343  0.24125657]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.76525588  0.23474412]
 [ 0.94819874  0.05180126]
 [ 0.78712856  0.21287144]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98224733  0.01775267]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.99
####################################

----Parameter value:  train_test_ratio  =  0.7
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.7  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.78855622  0.21144378]
 [ 1.          0.        ]
 [ 0.81657043  0.18342957]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.7  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.81927052  0.18072948]
 [ 1.          0.        ]
 [ 0.84285263  0.15714737]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.7  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.84192675  0.15807325]
 [ 0.94377851  0.05622149]
 [ 0.86253706  0.13746294]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98162392  0.01837608]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.7  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.85940672  0.14059328]
 [ 0.94646798  0.05353202]
 [ 0.87722584  0.12277416]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98194283  0.01805717]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.7  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86802166  0.13197834]
 [ 0.94858051  0.05141949]
 [ 0.88480078  0.11519922]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98224733  0.01775267]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

----Parameter value:  train_test_ratio  =  0.8
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.8  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.78855622  0.21144378]
 [ 1.          0.        ]
 [ 0.81657043  0.18342957]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.93
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.8  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.81927052  0.18072948]
 [ 1.          0.        ]
 [ 0.84285263  0.15714737]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.8  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.84192675  0.15807325]
 [ 0.94377851  0.05622149]
 [ 0.86253706  0.13746294]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98162392  0.01837608]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.8  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.85940672  0.14059328]
 [ 0.94646798  0.05353202]
 [ 0.87722584  0.12277416]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98194283  0.01805717]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.8  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.  1.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 1.  0.]
 [ 0.  1.]
 [ 0.  1.]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.86802166  0.13197834]
 [ 0.94858051  0.05141949]
 [ 0.88480078  0.11519922]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98224733  0.01775267]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.95
####################################

####################################


--Parameter >> train_test_ratio << summary-table of accuracy (cross-validation): [[ 1.    1.    1.    1.    0.98]
 [ 1.    1.    1.    1.    1.  ]
 [ 1.    1.    1.    1.    1.  ]
 [ 0.96  0.99  0.99  0.99  0.99]
 [ 0.95  0.96  0.96  0.96  0.96]
 [ 0.93  0.95  0.95  0.95  0.95]]
####################################


