############# FILENAME #############
danefake1.4-1.5.dat
####################################
--Parameter scanned:  weights
----Parameter value:  weights  =  distance
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.45838638  0.54161362]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.41527887  0.58472113]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  0.98
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.61794501  0.38205499]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.57179718  0.42820282]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.81131109  0.18868891]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.99459771  0.00540229]
 [ 1.          0.        ]
 [ 0.93544021  0.06455979]
 [ 0.97036973  0.02963027]
 [ 1.          0.        ]
 [ 0.94130905  0.05869095]
 [ 1.          0.        ]
 [ 0.98347402  0.01652598]
 [ 0.96125768  0.03874232]
 [ 0.71578602  0.28421398]
 [ 0.81339515  0.18660485]
 [ 0.80801563  0.19198437]
 [ 1.          0.        ]
 [ 0.70943936  0.29056064]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.70817986  0.29182014]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.97408305  0.02591695]
 [ 0.95741606  0.04258394]
 [ 1.          0.        ]
 [ 0.71196677  0.28803323]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.47877302  0.52122698]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.45952787  0.54047213]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.85407991  0.14592009]
 [ 1.          0.        ]
 [ 0.98364595  0.01635405]
 [ 0.68575403  0.31424597]
 [ 0.97151778  0.02848222]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.99462386  0.00537614]
 [ 1.          0.        ]
 [ 0.93876361  0.06123639]
 [ 0.94329318  0.05670682]
 [ 0.94384531  0.05615469]
 [ 0.9440878   0.0559122 ]
 [ 1.          0.        ]
 [ 0.98371372  0.01628628]
 [ 0.96248311  0.03751689]
 [ 0.58651052  0.41348948]
 [ 0.68883987  0.31116013]
 [ 0.68157145  0.31842855]
 [ 1.          0.        ]
 [ 0.57498378  0.42501622]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.57696784  0.42303216]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.95020473  0.04979527]
 [ 0.95890086  0.04109914]
 [ 0.98372932  0.01627068]
 [ 0.57826726  0.42173274]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.97
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.16684779  0.83315221]
 [ 0.39102964  0.60897036]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.87426182  0.12573818]
 [ 0.          1.        ]
 [ 0.84049052  0.15950948]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.38675159  0.61324841]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.87217727  0.12782273]
 [ 1.          0.        ]
 [ 0.98390479  0.01609521]
 [ 0.7214304   0.2785696 ]
 [ 0.97228896  0.02771104]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.99057483  0.00942517]
 [ 1.          0.        ]
 [ 0.89786417  0.10213583]
 [ 0.94448352  0.05551648]
 [ 0.94666763  0.05333237]
 [ 0.90429146  0.09570854]
 [ 1.          0.        ]
 [ 0.97107538  0.02892462]
 [ 0.93511549  0.06488451]
 [ 0.64801127  0.35198873]
 [ 0.72444694  0.27555306]
 [ 0.71799306  0.28200694]
 [ 1.          0.        ]
 [ 0.64043716  0.35956284]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.640239    0.359761  ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.95117     0.04883   ]
 [ 0.93051642  0.06948358]
 [ 0.98398503  0.01601497]
 [ 0.64332065  0.35667935]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.14310001  0.85689999]
 [ 0.33079044  0.66920956]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.77809669  0.22190331]
 [ 0.          1.        ]
 [ 0.72880789  0.27119211]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.12593094  0.87406906]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.33465099  0.66534901]]
Probability of correct assessment (fake data): 
[[ 0.9855147   0.0144853 ]
 [ 0.78044004  0.21955996]
 [ 1.          0.        ]
 [ 0.96948167  0.03051833]
 [ 0.74853831  0.25146169]
 [ 0.94799518  0.05200482]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.98667086  0.01332914]
 [ 1.          0.        ]
 [ 0.86104711  0.13895289]
 [ 0.94559108  0.05440892]
 [ 0.9026041   0.0973959 ]
 [ 0.9080239   0.0919761 ]
 [ 1.          0.        ]
 [ 0.97144209  0.02855791]
 [ 0.93686251  0.06313749]
 [ 0.56646818  0.43353182]
 [ 0.75146797  0.24853203]
 [ 0.74560493  0.25439507]
 [ 0.92566788  0.07433212]
 [ 0.55701982  0.44298018]
 [ 0.99271305  0.00728695]
 [ 0.92396993  0.07603007]
 [ 0.55813755  0.44186245]
 [ 1.          0.        ]
 [ 0.92720338  0.07279662]
 [ 0.9269857   0.0730143 ]
 [ 1.          0.        ]
 [ 0.9520691   0.0479309 ]
 [ 0.90419026  0.09580974]
 [ 0.96963448  0.03036552]
 [ 0.56020026  0.43979974]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.94
####################################

----Parameter value:  weights  =  uniform
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: uniform  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.5  0.5]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 0.5  0.5]]
Probability of correct assessment (fake data): 
[[ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]
 [ 1.  0.]]
------Accuracy obtained using cross-validation:  0.98
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: uniform  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.66666667  0.33333333]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.66666667  0.33333333]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.95
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: uniform  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.5  0.5]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 0.5  0.5]]
Probability of correct assessment (fake data): 
[[ 1.    0.  ]
 [ 0.75  0.25]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 0.5   0.5 ]
 [ 0.75  0.25]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 0.5   0.5 ]
 [ 0.75  0.25]
 [ 0.75  0.25]
 [ 1.    0.  ]
 [ 0.75  0.25]
 [ 0.75  0.25]
 [ 0.5   0.5 ]
 [ 0.5   0.5 ]
 [ 0.5   0.5 ]
 [ 1.    0.  ]
 [ 0.5   0.5 ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 0.5   0.5 ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 1.    0.  ]
 [ 0.5   0.5 ]
 [ 0.75  0.25]
 [ 0.75  0.25]
 [ 0.5   0.5 ]
 [ 1.    0.  ]]
------Accuracy obtained using cross-validation:  0.97
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: uniform  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.2  0.8]
 [ 0.4  0.6]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.8  0.2]
 [ 0.   1. ]
 [ 0.8  0.2]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 1.   0. ]
 [ 0.   1. ]
 [ 0.4  0.6]]
Probability of correct assessment (fake data): 
[[ 1.   0. ]
 [ 0.8  0.2]
 [ 1.   0. ]
 [ 0.8  0.2]
 [ 0.6  0.4]
 [ 0.8  0.2]
 [ 1.   0. ]
 [ 1.   0. ]
 [ 1.   0. ]
 [ 0.6  0.4]
 [ 1.   0. ]
 [ 0.6  0.4]
 [ 0.6  0.4]
 [ 0.8  0.2]
 [ 0.6  0.4]
 [ 1.   0. ]
 [ 0.6  0.4]
 [ 0.6  0.4]
 [ 0.6  0.4]
 [ 0.6  0.4]
 [ 0.6  0.4]
 [ 1.   0. ]
 [ 0.6  0.4]
 [ 1.   0. ]
 [ 1.   0. ]
 [ 0.6  0.4]
 [ 1.   0. ]
 [ 1.   0. ]
 [ 1.   0. ]
 [ 1.   0. ]
 [ 0.6  0.4]
 [ 0.6  0.4]
 [ 0.8  0.2]
 [ 0.6  0.4]
 [ 1.   0. ]]
------Accuracy obtained using cross-validation:  0.93
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: uniform  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.16666667  0.83333333]
 [ 0.33333333  0.66666667]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.66666667  0.33333333]
 [ 0.          1.        ]
 [ 0.66666667  0.33333333]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.16666667  0.83333333]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.33333333  0.66666667]]
Probability of correct assessment (fake data): 
[[ 0.83333333  0.16666667]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.5         0.5       ]
 [ 1.          0.        ]
 [ 0.5         0.5       ]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 0.5         0.5       ]
 [ 0.66666667  0.33333333]
 [ 0.66666667  0.33333333]
 [ 0.83333333  0.16666667]
 [ 0.5         0.5       ]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 0.5         0.5       ]
 [ 1.          0.        ]
 [ 0.83333333  0.16666667]
 [ 0.83333333  0.16666667]
 [ 1.          0.        ]
 [ 0.66666667  0.33333333]
 [ 0.5         0.5       ]
 [ 0.66666667  0.33333333]
 [ 0.5         0.5       ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.92
####################################

####################################


--Parameter >> weights << summary-table of accuracy (cross-validation): [[ 0.98  0.96  0.97  0.95  0.94]
 [ 0.98  0.95  0.97  0.93  0.92]]
####################################


