############# FILENAME #############
danefake1.2-1.5.dat
####################################
--Parameter scanned:  metric
----Parameter value:  metric  =  minkowski
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.46503664  0.53496336]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.46975085  0.53024915]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.82037779  0.17962221]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.81372225  0.18627775]
 [ 0.80656026  0.19343974]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.94264286  0.05735714]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.62569087  0.37430913]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.62963679  0.37036321]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.62569086  0.37430914]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.95404725  0.04595275]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.69991112  0.30008888]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.69012123  0.30987877]
 [ 0.68025153  0.31974847]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.94567896  0.05432104]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.72436908  0.27563092]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.71511202  0.28488798]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.70013653  0.29986347]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.84482931  0.15517069]
 [ 0.86478197  0.13521803]
 [ 1.          0.        ]
 [ 0.91300472  0.08699528]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86242662  0.13757338]
 [ 0.88516367  0.11483633]
 [ 1.          0.        ]
 [ 0.73610951  0.26389049]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.85507105  0.14492895]
 [ 0.72802175  0.27197825]
 [ 0.71990998  0.28009002]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.9135641   0.0864359 ]
 [ 1.          0.        ]
 [ 0.8982748   0.1017252 ]
 [ 0.88582853  0.11417147]
 [ 0.87881029  0.12118971]
 [ 1.          0.        ]
 [ 0.78179088  0.21820912]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.83965167  0.16034833]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.95568994  0.04431006]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.1676393   0.8323607 ]
 [ 0.76657831  0.23342169]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.1296859   0.8703141 ]
 [ 0.7489489   0.2510511 ]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.86542772  0.13457228]
 [ 0.87805939  0.12194061]
 [ 1.          0.        ]
 [ 0.9165336   0.0834664 ]
 [ 0.96684693  0.03315307]
 [ 1.          0.        ]
 [ 0.87622234  0.12377766]
 [ 0.89542424  0.10457576]
 [ 1.          0.        ]
 [ 0.76331604  0.23668396]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.87313362  0.12686638]
 [ 0.75625372  0.24374628]
 [ 0.74956919  0.25043081]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.92041244  0.07958756]
 [ 1.          0.        ]
 [ 0.90296012  0.09703988]
 [ 0.89599796  0.10400204]
 [ 0.88993806  0.11006194]
 [ 0.8764714   0.1235286 ]
 [ 0.81848793  0.18151207]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86005271  0.13994729]
 [ 0.92649546  0.07350454]
 [ 1.          0.        ]
 [ 0.96844285  0.03155715]
 [ 1.          0.        ]
 [ 0.95743696  0.04256304]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.98
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: distance  metric: minkowski  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.12814792  0.87185208]
 [ 0.          1.        ]
 [ 0.14379831  0.85620169]
 [ 0.65096787  0.34903213]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.12014879  0.87985121]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.11484827  0.88515173]
 [ 0.78333693  0.21666307]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.8789874   0.1210126 ]
 [ 0.88861094  0.11138906]
 [ 0.95074161  0.04925839]
 [ 0.91968121  0.08031879]
 [ 0.96786759  0.03213241]
 [ 0.94071817  0.05928183]
 [ 0.79670817  0.20329183]
 [ 0.90366968  0.09633032]
 [ 1.          0.        ]
 [ 0.78455737  0.21544263]
 [ 1.          0.        ]
 [ 0.95689697  0.04310303]
 [ 0.88536036  0.11463964]
 [ 0.77839302  0.22160698]
 [ 0.7725578   0.2274422 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.92614982  0.07385018]
 [ 1.          0.        ]
 [ 0.90709798  0.09290202]
 [ 0.82666935  0.17333065]
 [ 0.89886787  0.10113213]
 [ 0.88842341  0.11157659]
 [ 0.701169    0.298831  ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.77359326  0.22640674]
 [ 0.93141673  0.06858327]
 [ 1.          0.        ]
 [ 0.96936498  0.03063502]
 [ 1.          0.        ]
 [ 0.95900683  0.04099317]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.98
####################################

----Parameter value:  metric  =  euclidean
------Number of neighbours, k:  2
------All params @: {
n_neighbors: 2  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.46503664  0.53496336]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.46975085  0.53024915]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.82037779  0.17962221]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.81372225  0.18627775]
 [ 0.80656026  0.19343974]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.94264286  0.05735714]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.62569087  0.37430913]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  3
------All params @: {
n_neighbors: 3  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.62963679  0.37036321]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.62569086  0.37430914]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.95404725  0.04595275]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.69991112  0.30008888]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.69012123  0.30987877]
 [ 0.68025153  0.31974847]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.94567896  0.05432104]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.72436908  0.27563092]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  4
------All params @: {
n_neighbors: 4  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.71511202  0.28488798]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.70013653  0.29986347]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.84482931  0.15517069]
 [ 0.86478197  0.13521803]
 [ 1.          0.        ]
 [ 0.91300472  0.08699528]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86242662  0.13757338]
 [ 0.88516367  0.11483633]
 [ 1.          0.        ]
 [ 0.73610951  0.26389049]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.85507105  0.14492895]
 [ 0.72802175  0.27197825]
 [ 0.71990998  0.28009002]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.9135641   0.0864359 ]
 [ 1.          0.        ]
 [ 0.8982748   0.1017252 ]
 [ 0.88582853  0.11417147]
 [ 0.87881029  0.12118971]
 [ 1.          0.        ]
 [ 0.78179088  0.21820912]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.83965167  0.16034833]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.95568994  0.04431006]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.96
####################################

------Number of neighbours, k:  5
------All params @: {
n_neighbors: 5  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.1676393   0.8323607 ]
 [ 0.76657831  0.23342169]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.1296859   0.8703141 ]
 [ 0.7489489   0.2510511 ]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.86542772  0.13457228]
 [ 0.87805939  0.12194061]
 [ 1.          0.        ]
 [ 0.9165336   0.0834664 ]
 [ 0.96684693  0.03315307]
 [ 1.          0.        ]
 [ 0.87622234  0.12377766]
 [ 0.89542424  0.10457576]
 [ 1.          0.        ]
 [ 0.76331604  0.23668396]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.87313362  0.12686638]
 [ 0.75625372  0.24374628]
 [ 0.74956919  0.25043081]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.92041244  0.07958756]
 [ 1.          0.        ]
 [ 0.90296012  0.09703988]
 [ 0.89599796  0.10400204]
 [ 0.88993806  0.11006194]
 [ 0.8764714   0.1235286 ]
 [ 0.81848793  0.18151207]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.86005271  0.13994729]
 [ 0.92649546  0.07350454]
 [ 1.          0.        ]
 [ 0.96844285  0.03155715]
 [ 1.          0.        ]
 [ 0.95743696  0.04256304]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.98
####################################

------Number of neighbours, k:  6
------All params @: {
n_neighbors: 6  train_test_ratio: 0.3  weights: distance  metric: euclidean  algorithm: auto }
Sensor data prediction: (1 = good, 0 = bad)[1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0]
Fake data prediction:[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Probability of correct assessment (sensor data):
[1st column: bad | 2nd column: good]
[[ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.12814792  0.87185208]
 [ 0.          1.        ]
 [ 0.14379831  0.85620169]
 [ 0.65096787  0.34903213]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.12014879  0.87985121]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.          1.        ]
 [ 1.          0.        ]
 [ 0.11484827  0.88515173]
 [ 0.78333693  0.21666307]]
Probability of correct assessment (fake data): 
[[ 1.          0.        ]
 [ 0.8789874   0.1210126 ]
 [ 0.88861094  0.11138906]
 [ 0.95074161  0.04925839]
 [ 0.91968121  0.08031879]
 [ 0.96786759  0.03213241]
 [ 0.94071817  0.05928183]
 [ 0.79670817  0.20329183]
 [ 0.90366968  0.09633032]
 [ 1.          0.        ]
 [ 0.78455737  0.21544263]
 [ 1.          0.        ]
 [ 0.95689697  0.04310303]
 [ 0.88536036  0.11463964]
 [ 0.77839302  0.22160698]
 [ 0.7725578   0.2274422 ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.92614982  0.07385018]
 [ 1.          0.        ]
 [ 0.90709798  0.09290202]
 [ 0.82666935  0.17333065]
 [ 0.89886787  0.10113213]
 [ 0.88842341  0.11157659]
 [ 0.701169    0.298831  ]
 [ 1.          0.        ]
 [ 1.          0.        ]
 [ 0.77359326  0.22640674]
 [ 0.93141673  0.06858327]
 [ 1.          0.        ]
 [ 0.96936498  0.03063502]
 [ 1.          0.        ]
 [ 0.95900683  0.04099317]
 [ 1.          0.        ]
 [ 1.          0.        ]]
------Accuracy obtained using cross-validation:  0.98
####################################

####################################


--Parameter >> metric << summary-table of accuracy (cross-validation): [[ 0.96  0.96  0.96  0.98  0.98]
 [ 0.96  0.96  0.96  0.98  0.98]]
####################################


